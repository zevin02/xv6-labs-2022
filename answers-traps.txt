Q: Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf?
A: a0-a7(all the arguments for functions); a2 which contain 13;,except that a0 and a1 contain the return value

Q: Where is the call to function f in the assembly code for main? Where is the call to g? (Hint: the compiler may inline functions.)
A: none ,function g inline into function f, function f inline into main ,they all unfolded when being called
（li a2,13 directly）
Q: At what address is the function printf located?
A: 0x668

Q: What value is in the register ra just after the jalr to printf in main?
A: 0x38(ra contain the address of the next instruct after  calling function)

Q: Run the following code.

运行以下代码。

	unsigned int i = 0x00646c72;
	printf("H%x Wo%s", 57616, &i);
      
	Unsignedint i = 0x00646c72; printf (“ H% x Wo% s”，57616，& i) ;
      
What is the output?
A:HE110 World  

Q: The output depends on that fact that the RISC-V is little-endian. If the RISC-V were instead big-endian what would you set i to in order to yield the same output? Would you need to change 57616 to a different value?
A: i change into 0x726c6400,不用改变57616的值

Q: In the following code, what is going to be printed after 'y='? (note: the answer is not a specific value.) Why does this happen?

	printf("x=%d y=%d", 3);
A: y could print a random value because printf func don't explicitly call the arg[1],at this point ,the any previous a2 value 
will be used